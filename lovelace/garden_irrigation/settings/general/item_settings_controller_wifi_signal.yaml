# lovelace_gen

#====================================================================
#=== CONTROLLER WIFI SIGNAL
#===
#=== entity: entity_id of irrigation device_tracker.unifi_controller
#=== name  : Text to display
#====================================================================
type: custom:button-card
entity: {{ entity }}
name: >
  [[[
    var statestr = (entity === undefined || entity.state === undefined) ? 'undefined' : entity.state;
    var unit_om = (statestr != 'undefined' && entity.attributes.unit_of_measurement) ? entity.attributes.unit_of_measurement : '';
    return '{{ name }}' + ' (' + entity.state + ' ' + unit_om + ')'
  ]]]
icon: >
  [[[
    return (entity === undefined || entity.state == 'unavailable') ? 'mdi:wifi-off' : 'mdi:wifi';
  ]]]
show_state: true
state_display: <elt><ha-icon icon=mdi:square-edit-outline></ha-icon></elt>
size: 30%
styles:
  grid:
    - grid-template-areas: '"i n s"'
    - grid-template-columns: 15% auto 5%
    - grid-template-rows: 1fr
  card:
    - font-family: >
        [[[
          return states['input_text.irrigation_ui_font_family'].state
        ]]]
    - font-size: 15px
    - padding: 0em 1.5em 0em 0em
    - background: none
  icon:
    - color: var(--state-icon-color)
  name: 
    - justify-self: start
state:
  - value: 'unavailable'
    styles:
      icon:
        - color: var(--accent-color)
        - animation: blink 2s ease infinite
      state:
        - color: var(--accent-color)
        - animation: blink 2s ease infinite

#=== CONFIGURE IRRIGATION CONTROLLER
tap_action:
  action: fire-dom-event
  browser_mod:
    service: browser_mod.popup
    data:
      title: {{ name }}
      # title: Irrigation Controller
      content:
        type: vertical-stack
        cards:
          - type: markdown
            content: Enter the name of the sensor for your irrigation controller WiFi signal strength.


                    Leave blank to reset to default.
            card_mod:
              style: >
                ha-card {
                  font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
                  font-size: 16px;
                }

          - type: entities
            entities:
              # - entity: input_text.irrigation_external_sensor_controller_wifi
              - entity: input_text.irrigation_external_sensor_controller_{{ name[-1] }}_wifi
                name: {{ name }}
                card_mod:
                  style: &text_wrap_style
                    hui-generic-entity-row:
                      $: |
                        .info {
                          text-overflow: unset !important;
                          white-space: unset !important;
                        }

              - type: section

            card_mod:
              style: >
                ha-card {
                  font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
                }


          - type: markdown
            content: >
              ### Settings for all controllers.
              
              You can decide how long to wait if a controller is offline.
            card_mod:
              style: >
                ha-card {
                  font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
                  font-size: 16px;
                }

          - type: entities
            entities:
              - entity: input_number.irrigation_controller_offline_wait
                name: Seconds To Wait If Offline
                card_mod:
                  style: *text_wrap_style

              - entity: input_number.irrigation_controller_log_unavailable_seconds_threshold
                name: Seconds To Wait Before Logging
                card_mod:
                  style: *text_wrap_style

          - type: markdown
            content: You can disable the switches to prevent irrigation while testing.
            card_mod:
              style: >
                ha-card {
                  font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
                  font-size: 16px;
                }

          - type: entities
            entities:
              - entity: input_boolean.irrigation_disable_switches
                card_mod:
                  style: *text_wrap_style
            card_mod:
              style: >
                ha-card {
                  font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
                }

          - type: markdown
            content: Choose notifications for Controller WiFi events.
            card_mod:
              style: >
                ha-card {
                  font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
                  font-size: 16px;
                }

          - type: entities
            entities:
              - entity: input_boolean.irrigation_ha_notify_of_controller_wifi_events
                name: HA Persistent Notifications
                card_mod:
                  style: *text_wrap_style
              - entity: input_boolean.irrigation_user_notify_of_controller_wifi_events
                name: User Notifications
                card_mod:
                  style: *text_wrap_style
            card_mod:
              style: >
                ha-card {
                  font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
                }

    #=== Style needed for pop-up title
      style:
        $: |
          .mdc-dialog .mdc-dialog__container .mdc-dialog__surface {
              font-family: {% raw %}{{ states('input_text.irrigation_ui_font_family') }}{% endraw %};
            }
    